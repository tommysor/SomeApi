name: Deploy

env:
  GITHUB_REPOSITORY_LOWERCASE: 'placeholder_GITHUB_REPOSITORY_LOWERCASE'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  buildApi:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Repo to lowercase
        run: echo "GITHUB_REPOSITORY_LOWERCASE=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      
      - name: Docker Server1
        env:
          image_tag_server1: ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/server1:${{ github.sha }}
        run: |
          echo image_tag: ${{ env.image_tag_server1 }}
          docker build --tag ${{ env.image_tag_server1 }} ./src/Server1
          docker push ${{ env.image_tag_server1 }}

  buildProcessor:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Repo to lowercase
        run: echo "GITHUB_REPOSITORY_LOWERCASE=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Docker Server2
        env:
          image_tag_server2: ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/server2:${{ github.sha }}
        run: |
          echo image_tag: ${{ env.image_tag_server2 }}
          docker build --tag ${{ env.image_tag_server2 }} ./src/Server2
          docker push ${{ env.image_tag_server2 }}

  deployEnvironment:
    runs-on: ubuntu-22.04
    environment: Production
    env:
      location: 'norwayeast'
    outputs:
      containerAppEnvironmentId: ${{ steps.deployEnvironment.outputs.containerAppEnvironmentId }}
      serviceBusName: ${{ steps.deployEnvironment.outputs.serviceBusName }}
      serviceBusCreateTodoTopicName: ${{ steps.deployEnvironment.outputs.serviceBusCreateTodoTopicName }}
      applicationInsightsConnectionString: ${{ steps.deployEnvironment.outputs.applicationInsightsConnectionString }}
      daprServiceBusPubSubName: ${{ steps.deployEnvironment.outputs.daprServiceBusPubSubName }}
      serviceBusCreateTodoTopicQueueTriggerAutorizationName: ${{ steps.deployEnvironment.outputs.serviceBusCreateTodoTopicQueueTriggerAutorizationName }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Repo to lowercase
      run: echo "GITHUB_REPOSITORY_LOWERCASE=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_SOMEAPI_DEPLOYER_CREDENTIALS }}

    - uses: azure/arm-deploy@v1
      id: deployResourceGroups
      name: Deloy ResourceGroups
      with:
        scope: subscription
        region: ${{ env.location }}
        template: ./build/environment/resourceGroups.bicep
        parameters: 'location=${{ env.location }} environmentRgName=${{ secrets.AZURE_ENVIRONMENT_RG }} apiRgName=${{ secrets.AZURE_API_RG }} processingRgName=${{ secrets.AZURE_PROCESSING_RG }}'
        deploymentName: rg-${{ github.sha }}

    - uses: azure/arm-deploy@v1
      id: deployEnvironment
      name: Deploy Environment
      with:
        scope: resourcegroup
        resourceGroupName: ${{ steps.deployResourceGroups.outputs.environmentRgName }}
        template: ./build/environment/environment.bicep
        deploymentMode: Complete
        deploymentName: env-${{ github.sha }}

  deployApi:
    runs-on: ubuntu-22.04
    needs:
    - deployEnvironment
    - buildApi
    environment: Production
    env:
      location: 'norwayeast'

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Repo to lowercase
      run: echo "GITHUB_REPOSITORY_LOWERCASE=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_SOMEAPI_DEPLOYER_CREDENTIALS }}

    - uses: azure/arm-deploy@v1
      id: deployApi
      name: Deploy Api
      env:
        environmentId: ${{ needs.deployEnvironment.outputs.containerAppEnvironmentId }}
        containerImage: ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/server1:${{ github.sha }}
        revisionSuffix: ${{ github.sha }}
        serviceBusName: ${{ needs.deployEnvironment.outputs.serviceBusName }}
        serviceBusCreateTodoTopicName: ${{ needs.deployEnvironment.outputs.serviceBusCreateTodoTopicName }}
        applicationInsightsConnectionString: ${{ needs.deployEnvironment.outputs.applicationInsightsConnectionString }}
        daprServiceBusPubSubName: ${{ needs.deployEnvironment.outputs.daprServiceBusPubSubName }}
      with:
        scope: resourcegroup
        resourceGroupName: ${{ secrets.AZURE_API_RG }}
        template: ./build/server1/server1.bicep
        deploymentMode: Complete
        deploymentName: api-${{ github.sha }}
        parameters: 'environmentId=${{ env.environmentId }} containerImage=${{ env.containerImage }} revisionSuffix=${{ env.revisionSuffix }} environmentRgName=${{ secrets.AZURE_ENVIRONMENT_RG }} serviceBusName=${{ env.serviceBusName }} serviceBusCreateTodoTopicName=${{ env.serviceBusCreateTodoTopicName }} applicationInsightsConnectionString=${{ env.applicationInsightsConnectionString }} daprServiceBusPubSubName=${{ env.daprServiceBusPubSubName }}'

  deployProcessor:
    runs-on: ubuntu-22.04
    needs:
    - deployEnvironment
    - buildProcessor
    environment: Production
    env:
      location: 'norwayeast'

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Repo to lowercase
      run: echo "GITHUB_REPOSITORY_LOWERCASE=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_SOMEAPI_DEPLOYER_CREDENTIALS }}

    - uses: azure/arm-deploy@v1
      id: deployProcessing
      name: Deploy Processing
      env:
        environmentId: ${{ needs.deployEnvironment.outputs.containerAppEnvironmentId }}
        containerImage: ghcr.io/${{ env.GITHUB_REPOSITORY_LOWERCASE }}/server2:${{ github.sha }}
        revisionSuffix: ${{ github.sha }}
        serviceBusName: ${{ needs.deployEnvironment.outputs.serviceBusName }}
        serviceBusCreateTodoTopicName: ${{ needs.deployEnvironment.outputs.serviceBusCreateTodoTopicName }}
        applicationInsightsConnectionString: ${{ needs.deployEnvironment.outputs.applicationInsightsConnectionString }}
        daprServiceBusPubSubName: ${{ needs.deployEnvironment.outputs.daprServiceBusPubSubName }}
        serviceBusCreateTodoTopicQueueTriggerAutorizationName: ${{ needs.deployEnvironment.outputs.serviceBusCreateTodoTopicQueueTriggerAutorizationName }}
      with:
        scope: resourcegroup
        resourceGroupName: ${{ secrets.AZURE_PROCESSING_RG }}
        template: ./build/server2/server2.bicep
        deploymentMode: Complete
        deploymentName: process-${{ github.sha }}
        parameters: 'environmentId=${{ env.environmentId }} containerImage=${{ env.containerImage }} revisionSuffix=${{ env.revisionSuffix }} environmentRgName=${{ secrets.AZURE_ENVIRONMENT_RG }} serviceBusName=${{ env.serviceBusName }} serviceBusCreateTodoTopicName=${{ env.serviceBusCreateTodoTopicName }} applicationInsightsConnectionString=${{ env.applicationInsightsConnectionString }} serviceBusCreateTodoTopicQueueTriggerAutorizationName=${{ env.serviceBusCreateTodoTopicQueueTriggerAutorizationName }} daprServiceBusPubSubName=${{ env.daprServiceBusPubSubName }}'
